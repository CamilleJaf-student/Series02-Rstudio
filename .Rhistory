nonuse <- read.csv("data/NonUse.csv", sep=";")
nonuse <- read.csv("data/NonUse.csv", sep=".")
nonuse <- read.csv("data/NonUse.csv", sep=",")
nonuse <- read.csv("data/NonUse.csv", sep=",", header=TRUE)
head(nonuse)
summary(nonuse)
View(nonuse)
View(nonuse)
View(nonuse)
hist(nonuse$PANU,
main = "PANU Distribution",
xlab = "PANU",
col = "lightgreen",
border = "black",
breaks = 20,       # number of bins
probability = TRUE) # scales y-axis as density
# Add density curve
lines(density(nonuse$PANU, na.rm = TRUE),
col = "red", lwd = 2)
cor.test(nonuse$PANU, nonuse$SANU, method = "pearson")
# --- 1. Nettoyage des données ---
nonuse_clean <- na.omit(nonuse)
# --- 2. Vérification normalité ---
shapiro.test(nonuse_clean$PANU)
shapiro.test(nonuse_clean$EENU)
shapiro.test(nonuse_clean$SANU)
# --- 3. Matrice de corrélation ---
# (choisis "pearson" si normalité, sinon "spearman")
cor_matrix <- cor(nonuse_clean, method = "spearman")
print(cor_matrix)
# --- 4. Tests de corrélation individuels ---
cor.test(nonuse_clean$PANU, nonuse_clean$SANU, method = "spearman")
cor.test(nonuse_clean$PANU, nonuse_clean$EENU, method = "spearman")
cor.test(nonuse_clean$SANU, nonuse_clean$EENU, method = "spearman")
cor.test(nonuse$PANU, nonuse$SANU, method = "spearman")
library(ggplot2)
ggplot(nonuse, aes(x=PANU, y=SANU)) +
geom_point() +
xlim(-100, 100) +
ylim(-100, 100)
labs(title="PANU vs SANU", x="PANU", y="SANU") +
theme_minimal()
library(ggplot2)
ggplot(nonuse, aes(x=PANU, y=SANU)) +
geom_point() +
geom_smooth(method='lm', formula= y-x, color='salmon', se=T) +
xlim(-100, 100) +
ylim(-100, 100)
library(ggplot2)
ggplot(nonuse, aes(x=PANU, y=SANU)) +
geom_point() +
geom_smooth(method='lm', formula= y~x, color='salmon', se=T) +
xlim(-100, 100) +
ylim(-100, 100)
labs(title="PANU vs SANU", x="PANU", y="SANU") +
theme_minimal()
nonuse <- read.csv("data/NonUse.csv", sep=",", header=TRUE)
head(nonuse)
summary(nonuse)
hist(nonuse$PANU,
main = "PANU Distribution",
xlab = "PANU",
col = "lightgreen",
border = "black",
breaks = 20,       # number of bins
probability = TRUE) # scales y-axis as density
# Add density curve
lines(density(nonuse$PANU, na.rm = TRUE),
col = "red", lwd = 2)
cor.test(nonuse$PANU, nonuse$SANU, method = "spearman")
cor.test(nonuse$PANU, nonuse$SANU, method = "pearson")
# --- 1. Nettoyage des données ---
nonuse_clean <- na.omit(nonuse)
# --- 2. Vérification normalité ---
shapiro.test(nonuse_clean$PANU)
shapiro.test(nonuse_clean$EENU)
shapiro.test(nonuse_clean$SANU)
# --- 3. Matrice de corrélation ---
# (choisis "pearson" si normalité, sinon "spearman")
cor_matrix <- cor(nonuse_clean, method = "spearman")
print(cor_matrix)
# --- 4. Tests de corrélation individuels ---
cor.test(nonuse_clean$PANU, nonuse_clean$SANU, method = "spearman")
cor.test(nonuse_clean$PANU, nonuse_clean$EENU, method = "spearman")
cor.test(nonuse_clean$SANU, nonuse_clean$EENU, method = "spearman")
library(ggplot2)
ggplot(nonuse, aes(x=PANU, y=SANU)) +
geom_point() +
xlim(-100, 100) +
ylim(-100, 100)
labs(title="PANU vs SANU", x="PANU", y="SANU") +
theme_minimal()
library(ggplot2)
ggplot(nonuse, aes(x=PANU, y=SANU)) +
geom_point() +
geom_smooth(method='lm', formula= y~x, color='salmon', se=T) +
xlim(-100, 100) +
ylim(-100, 100)
labs(title="PANU vs SANU", x="PANU", y="SANU") +
theme_minimal()
lm_sanu <- lm(SANU ~ PANU, data=nonuse)
summaty(lm_sanu)
lm_sanu <- lm(SANU ~ PANU, data=nonuse)
summary(lm_sanu)
coef(lm_sanu)
slope <- coef(lm_sanu)[1]
intercetp <- coef(lm_sanu)[2]
cat("Regression equation : SANU =", slope, "*PANU +", intercept, "\n")
install.packages("ggplot2")
library(ggplot2)
lm_sanu <- lm(SANU ~ PANU, data=nonuse)
summary(lm_sanu)
coef(lm_sanu)
slope <- coef(lm_sanu)[1]
intercetp <- coef(lm_sanu)[2]
cat("Regression equation : SANU =", slope, "*PANU +", intercept, "\n")
lm_sanu <- lm(SANU ~ PANU, data=nonuse)
summary(lm_sanu)
coef(lm_sanu)
slope <- coef(lm_sanu)[1]
intercept <- coef(lm_sanu)[2]
cat("Regression equation : SANU =", slope, "*PANU +", intercept, "\n")
lm_sanu <- lm(PANU ~ SANU, data=nonuse)
summary(lm_sanu)
coef(lm_sanu)
slope <- coef(lm_sanu)[1]
intercept <- coef(lm_sanu)[2]
cat("Regression equation : SANU =", slope, "*PANU +", intercept, "\n")
lm_sanu <- lm(PANU ~ SANU, data=nonuse)
summary(lm_panu)
lm_panu <- lm(PANU ~ SANU, data=nonuse)
summary(lm_panu)
coef(lm_panu)
slope <- coef(lm_panu)[1]
intercept <- coef(lm_panu)[2]
cat("Regression equation : PANU =", slope, "*SANU +", intercept, "\n")
Median: the middle value of a dataset when the values are ordered.
lm_sanu <- lm(EENU ~ PANU, data=nonuse)
summary(lm_eenu)
lm_eenu <- lm(EENU ~ PANU, data=nonuse)
summary(lm_eenu)
coef(lm_eenu)
slope <- coef(lm_eenu)[1]
intercept <- coef(lm_eenu)[2]
cat("Regression equation : EENU =", slope, "*PANU +", intercept, "\n")
lm_panu <- lm(PANU ~ EENU, data=nonuse)
summary(lm_panu)
coef(lm_panu)
slope <- coef(lm_panu)[1]
intercept <- coef(lm_panu)[2]
cat("Regression equation : PANU =", slope, "*EENU +", intercept, "\n")
nonuse <- read.csv("data/Prepost.csv", sep=",", header=TRUE)
head(nonuse)
summary(nonuse)
prepost <- read.csv("data/Prepost.csv", sep=",", header=TRUE)
head(prepost)
summary(prepost)
View(prepost)
View(prepost)
results <- read.csv("data/Results.csv", sep=",", header=TRUE)
results <- read.csv("data/Results.csv", sep=",", header=TRUE)
head(results)
summary(results)
View(results)
snore <- read.csv("data/snore.csv", sep=",", header=TRUE)
head(snore)
summary(snore)
View(prepost)
results <- read.csv("data/Results.csv", sep=",", header=TRUE)
head(results)
summary(results)
View(results)
View(prepost)
View(snore)
